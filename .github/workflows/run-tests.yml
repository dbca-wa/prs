name: run-tests

on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:
  run_tests:
    name: Run Django Tests
    runs-on: ubuntu-latest
    env:
      DATABASE_URL: postgis://postgres:postgres@localhost:5432/postgres
    services:
      postgres:
        image: postgis/postgis:13-3.1-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: --mount type=tmpfs,destination=/var/lib/postgresql/data --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
      rabbitmq:
        image: rabbitmq:3-alpine
        ports:
          - 5672:5672
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9.6
      - name: Install GDAL
        run: |
          sudo apt-add-repository ppa:ubuntugis/ubuntugis-unstable
          sudo apt-get update
          sudo apt-get install gdal-bin libgdal-dev
      - name: Install Poetry
        uses: snok/install-poetry@v1.2.0
        with:
          version: 1.1.8
          virtualenvs-create: true
          virtualenvs-in-project: true
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
      - name: Install dependencies
        run: poetry install
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      - name: Run DB migrations
        run: |
          source .venv/bin/activate
          python manage.py migrate
      - name: Run celery worker for tests
        run: |
          source .venv/bin/activate
          celery --app prs2 worker --loglevel error --detach
      - name: Run tests
        run: |
          source .venv/bin/activate
          python manage.py collectstatic
          python manage.py test --noinput --failfast -v2
